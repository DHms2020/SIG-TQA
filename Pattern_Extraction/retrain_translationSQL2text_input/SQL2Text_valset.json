{"entities": ["select", "count(*)", "from", "singer"], "labels": "How many singers do we have?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "singer"], "labels": "What is the total number of singers?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc"], "labels": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Order ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc"], "labels": "What are the names, countries, and ages for every singer in descending order of age?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Order ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "avg(age)", ",", "min(age)", ",", "max(age)", "from", "singer", "where", "country", "=", "'france'"], "labels": "What is the average, minimum, and maximum age of all singers from France?", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A AGG_OP ( C number ) ( T TABLE ) ) ( A AGG_OP ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "avg(age)", ",", "min(age)", ",", "max(age)", "from", "singer", "where", "country", "=", "'france'"], "labels": "What is the average, minimum, and maximum age for all French singers?", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A AGG_OP ( C number ) ( T TABLE ) ) ( A AGG_OP ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1"], "labels": "Show the name and the release year of the song by the youngest singer.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1"], "labels": "What are the names and release years for all the songs of the youngest singer?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20"], "labels": "What are all distinct countries where singers above age 20 are from?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20"], "labels": "What are  the different countries with singers above age 20?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "country", ",", "count(*)", "from", "singer", "group", "by", "country"], "labels": "Show all countries and the number of singers in each country.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "country", ",", "count(*)", "from", "singer", "group", "by", "country"], "labels": "How many singers are from each country?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "song_name", "from", "singer", "where", "age", ">", "(select", "avg(age)", "from", "singer)"], "labels": "List all song names by singers above the average age.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter CMP_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "song_name", "from", "singer", "where", "age", ">", "(select", "avg(age)", "from", "singer)"], "labels": "What are all the song names by singers who are older than average?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter CMP_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000"], "labels": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter number number between ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000"], "labels": "What are the locations and names of all stations with capacity between 5000 and 10000?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter number number between ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "max(capacity),", "average", "from", "stadium"], "labels": "What is the maximum capacity and the average of all stadiums ?", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "avg(capacity)", ",", "max(capacity)", "from", "stadium"], "labels": "What is the average and maximum capacities for all stadiums ?", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A AGG_OP ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1"], "labels": "What is the name and capacity for the stadium with highest average attendance?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1"], "labels": "What is the name and capacity for the stadium with the highest average attendance?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015"], "labels": "How many concerts are there in year 2014 or 2015?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter or ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015"], "labels": "How many concerts occurred in 2014 or 2015?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter or ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) )"}
{"entities": ["select", "t2.name", ",", "count(*)", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id"], "labels": "Show the stadium name and the number of concerts in each stadium.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.name", ",", "count(*)", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id"], "labels": "For each stadium, how many concerts play there?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">=", "2014", "group", "by", "t2.stadium_id", "order", "by", "count(*)", "desc", "limit", "1"], "labels": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A count ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">", "2013", "group", "by", "t2.stadium_id", "order", "by", "count(*)", "desc", "limit", "1"], "labels": "What is the name and capacity of the stadium with the most concerts after 2013 ?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A count ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count(*)", "desc", "limit", "1"], "labels": "Which year has most number of concerts?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count(*)", "desc", "limit", "1"], "labels": "What is the year that had the most concerts?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(select", "stadium_id", "from", "concert)"], "labels": "Show the stadium names without any concert.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter CONDI_1_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(select", "stadium_id", "from", "concert)"], "labels": "What are the names of the stadiums without any concerts?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter CONDI_1_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "country", "from", "singer", "where", "age", ">", "40", "intersect", "select", "country", "from", "singer", "where", "age", "<", "30"], "labels": "Show countries where a singer above age 40 and a singer below 30 are from.", "pattern": "( Z intersect ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014"], "labels": "Show names for all stadiums except for stadiums having a concert in year 2014.", "pattern": "( Z except ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ) ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014"], "labels": "What are the names of all stadiums that did not have a concert in 2014?", "pattern": "( Z except ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ) ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.concert_name", ",", "t2.theme", ",", "count(*)", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id"], "labels": "Show the name and theme for all concerts and the number of singers in each concert.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.concert_name", ",", "t2.theme", ",", "count(*)", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id"], "labels": "What are the names , themes , and number of singers for every concert ?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.name", ",", "count(*)", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id"], "labels": "List singer names and number of concerts for each singer.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.name", ",", "count(*)", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id"], "labels": "What are the names of the singers and number of concerts for each person?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014"], "labels": "List all singer names in concerts in year 2014.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014"], "labels": "What are the names of the singers who performed in a concert in 2014?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "'%hey%'"], "labels": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CONDI_2_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "'%hey%'"], "labels": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CONDI_2_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015"], "labels": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "pattern": "( Z intersect ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015"], "labels": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "pattern": "( Z intersect ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "concert", "where", "stadium_id", "=", "(select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1)"], "labels": "Find the number of concerts happened in the stadium with the highest capacity .", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter CMP_OP ( A none ( C text ) ( T TABLE ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "concert", "where", "stadium_id", "=", "(select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1)"], "labels": "What are the number of concerts that occurred in the stadium with the largest capacity ?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter CMP_OP ( A none ( C text ) ( T TABLE ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "pets", "where", "weight", ">", "10"], "labels": "Find the number of pets whose weight is heavier than 10.", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "pets", "where", "weight", ">", "10"], "labels": "How many pets have a greater weight than 10?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1"], "labels": "Find the weight of the youngest dog.", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1"], "labels": "How much does the youngest dog weigh?", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "max(weight)", ",", "pettype", "from", "pets", "group", "by", "pettype"], "labels": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "max(weight)", ",", "pettype", "from", "pets", "group", "by", "pettype"], "labels": "List the maximum weight and type for each type of pet.", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20"], "labels": "Find number of pets owned by students who are older than 20.", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20"], "labels": "How many pets are owned by students that have an age greater than 20?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "'f'", "and", "t3.pettype", "=", "'dog'"], "labels": "Find the number of dog pets that are raised by female students (with sex F).", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter and ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "'f'", "and", "t3.pettype", "=", "'dog'"], "labels": "How many dog pets are raised by female students?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ( Filter and ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) )"}
{"entities": ["select", "count(distinct", "pettype)", "from", "pets"], "labels": "Find the number of distinct type of pets.", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(distinct", "pettype)", "from", "pets"], "labels": "How many different types of pet are there?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat'", "or", "t3.pettype", "=", "'dog'"], "labels": "Find the first name of students who have cat or dog pet.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter or ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) )"}
{"entities": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat'", "or", "t3.pettype", "=", "'dog'"], "labels": "What are the first names of every student who has a cat or dog as a pet?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter or ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) )"}
{"entities": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat'", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'dog'"], "labels": "Find the first name of students who have both cat and dog pets .", "pattern": "( Z intersect ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat'", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'dog'"], "labels": "What are the students' first names who have both cats and dogs as pets?", "pattern": "( Z intersect ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat')"], "labels": "Find the major and age of students who do not have a cat pet.", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Filter CONDI_1_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat')"], "labels": "What major is every student who does not own a cat as a pet, and also how old are they?", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Filter CONDI_1_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat'"], "labels": "Find the id of students who do not have a cat pet.", "pattern": "( Z except ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat'"], "labels": "What are the ids of the students who do not own cats as pets?", "pattern": "( Z except ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'dog'", "and", "t1.stuid", "not", "in", "(select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat')"], "labels": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Filter and ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ( Filter CONDI_1_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) ) ) )"}
{"entities": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'dog'", "and", "t1.stuid", "not", "in", "(select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "'cat')"], "labels": "What is the first name of every student who has a dog but does not have a cat?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Filter and ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ( Filter CONDI_1_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) ) ) )"}
{"entities": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1"], "labels": "Find the type and weight of the youngest pet.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1"], "labels": "What type of pet is the youngest animal, and how much does it weigh?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1"], "labels": "Find the id and weight of all pets whose age is older than 1.", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1"], "labels": "What is the id and weight of every pet who is older than 1?", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "avg(pet_age)", ",", "max(pet_age)", ",", "pettype", "from", "pets", "group", "by", "pettype"], "labels": "Find the average and maximum age for each type of pet.", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A AGG_OP ( C number ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "avg(pet_age)", ",", "max(pet_age)", ",", "pettype", "from", "pets", "group", "by", "pettype"], "labels": "What is the average and maximum age for each pet type?", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A AGG_OP ( C number ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "avg(weight)", ",", "pettype", "from", "pets", "group", "by", "pettype"], "labels": "Find the average weight for each pet type.", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "avg(weight)", ",", "pettype", "from", "pets", "group", "by", "pettype"], "labels": "What is the average weight for each type of pet?", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid"], "labels": "Find the first name and age of students who have a pet.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid"], "labels": "What are the different first names and ages of the students who do have pets?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "'smith'"], "labels": "Find the id of the pet owned by student whose last name is ‘Smith’.", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "'smith'"], "labels": "What is the id of the pet owned by the student whose last name is 'Smith'?", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid"], "labels": "Find the number of pets for each student who has any pet and student id.", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid"], "labels": "For students who have pets , how many pets does each student have ? list their ids instead of names .", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count(*)", ">", "1"], "labels": "Find the first name and gender of student who have more than one pet.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count(*)", ">", "1"], "labels": "What is the first name and gender of the all the students who have more than one pet?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ) ( Filter number CMP_OP ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "'cat'"], "labels": "Find the last name of the student who has a cat that is age 3.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter and ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) )"}
{"entities": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "'cat'"], "labels": "What is the last name of the student who has a cat that is 3 years old?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter and ( Filter number CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C text ) ( T TABLE ) ) ) ) ) )"}
{"entities": ["select", "avg(age)", "from", "student", "where", "stuid", "not", "in", "(select", "stuid", "from", "has_pet)"], "labels": "Find the average age of students who do not have any pet .", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ) ( Filter CONDI_1_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "avg(age)", "from", "student", "where", "stuid", "not", "in", "(select", "stuid", "from", "has_pet)"], "labels": "What is the average age for all students who do not own any pets ?", "pattern": "( Z ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ) ( Filter CONDI_1_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A none ( C number ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "continents;"], "labels": "How many continents are there?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "continents;"], "labels": "What is the number of continents?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.contid", ",", "t1.continent", ",", "count(*)", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid;"], "labels": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.contid", ",", "t1.continent", ",", "count(*)", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid;"], "labels": "For each continent, list its id, name, and how many countries it has?", "pattern": "( Z ( R ( Select ( A none ( C number ) ( T TABLE ) ) ( A none ( C text ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "countries;"], "labels": "How many countries are listed?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "count(*)", "from", "countries;"], "labels": "How many countries exist?", "pattern": "( Z ( R ( Select ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.fullname", ",", "t1.id", ",", "count(*)", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id;"], "labels": "How many models does each car maker produce? List maker full name, id and the number.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.fullname", ",", "t1.id", ",", "count(*)", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id;"], "labels": "What is the full name of each car maker, along with its id and how many models it produces?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ( A none ( C number ) ( T TABLE ) ) ( A count ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1;"], "labels": "Which model of the car has the minimum horsepower?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1;"], "labels": "What is the model of the car with the smallest amount of horsepower?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Superlative ORDER_OP ( A none ( C text ) ( T TABLE ) ) ) ) )"}
{"entities": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(select", "avg(weight)", "from", "cars_data)"], "labels": "Find the model of the car whose weight is below the average weight.", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter CMP_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(select", "avg(weight)", "from", "cars_data)"], "labels": "What is the model for the car with a weight smaller than the average?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter CMP_OP ( A none ( C number ) ( T TABLE ) ) ( R ( Select ( A AGG_OP ( C number ) ( T TABLE ) ) ) ) ) ) )"}
{"entities": ["select", "distinct", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "join", "cars_data", "as", "t4", "on", "t3.makeid", "=", "t4.id", "where", "t4.year", "=", "'1970';"], "labels": "Find the name of the makers that produced some cars in the year of 1970?", "pattern": "( Z ( R ( Select ( A none ( C text ) ( T TABLE ) ) ) ( Filter text CMP_OP ( A none ( C number ) ( T TABLE ) ) ) ) )"}
